<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:data="http://www.springframework.org/schema/data/jpa"
	xmlns:security="http://www.springframework.org/schema/security"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/data/jpa
	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- Packages to search for bean definitions -->	
	<context:component-scan base-package="es.ucm.fdi.anuncios" />
	<context:component-scan base-package="es.ucm.fdi.portal" />

	<!-- This element is used to enable annotation-based security in your application 
		(by setting the appropriate attributes on the element) -->
	<!-- See: http://docs.spring.io/spring-security/site/docs/4.0.0.RC1/reference/htmlsingle/#ns-global-method --> 
	<security:global-method-security pre-post-annotations="enabled" />


	<!-- -->
	<!-- Spring MVC configuration -->
	<!-- -->

	<!-- Define Spring MVC configuration using java annotations -->
	<mvc:annotation-driven />

	<!--  -->
	<!-- Spring's DispatcherServlet serves static resources -->
	<!--  -->
	<mvc:resources mapping="/static/**"  location="/static/" />
	<!-- WebJars mapping mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/ -->
	<mvc:resources mapping="/webjars/**" location="/webjars/"/>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		p:basename="classpath:messages" />
		
	<bean id="portalSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:dataSource-ref="portalDataSource" p:packagesToScan="es.ucm.fdi.anuncios, es.ucm.fdi.espacios"
		p:hibernateProperties-ref="hibernateProperties" />

	<!-- HSQL -->
<!-- 	<bean id="portalDataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
<!-- 		destroy-method="close"> -->
<!-- 		<property name="driverClassName" value="org.hsqldb.jdbcDriver" /> -->
<!-- 		 <property name="url" value="jdbc:hsqldb:./db2;shutdown=true" />  -->
<!-- 		<property name="username" value="sa" /> -->
<!-- 		<property name="password" value="" /> -->
<!-- 	</bean> -->
	
<!-- 	<util:properties id="hibernateProperties"> -->
<!-- 		<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop> -->
<!-- 		<prop key="hibernate.max_fetch_depth">3</prop> -->
<!-- 		<prop key="hibernate.jdbc.fetch_size">50</prop> -->
<!-- 		<prop key="hibernate.jdbc.batch_size">10</prop> -->
<!-- 		<prop key="hibernate.show_sql">false</prop> -->
		<!-- <prop key="hibernate.hbm2ddl.auto">create-drop</prop> -->
<!-- 		<prop key="hibernate.hbm2ddl.auto">update</prop> -->
<!-- 	</util:properties> -->
	<!-- FIN HSQL -->
	
	
	<!-- PostgreSQL -->
	<bean class="java.net.URI" id="dbUrl">
		<constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
 	</bean>
 	
	<bean id="portalDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url"
			value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
		<property name="driverClassName" value="org.postgresql.Driver" />
	</bean>
	
	<util:properties id="hibernateProperties">
		<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
		<prop key="hibernate.max_fetch_depth">3</prop>
		<prop key="hibernate.jdbc.fetch_size">50</prop>
		<prop key="hibernate.jdbc.batch_size">10</prop>
		<prop key="hibernate.show_sql">false</prop>
		<prop key="hibernate.hbm2ddl.auto">create</prop>
	</util:properties>
	<!-- FIN PostgreSQL -->
	
	

	<util:properties id="avisosPrefs">
		<prop key="bucket">avisos</prop>
	</util:properties>
	
	<bean id="portalTransactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="portalSessionFactory" primary="true" />

	<tx:annotation-driven transaction-manager="portalTransactionManager" />

	

	
	

	<!-- Validator ***************** <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"> 
		<property name="validationMessageSource" ref="messageSource" /> </bean> -->


	<!--  -->
	<!-- Subida archivos -->
	<!-- http://blog.leituo.org/spring-mvc-the-put-method-nightmare-and-the-solution/ -->
	<!-- 	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10240000" />
	</bean>-->
	
	<!--  -->
	<!-- Declaring Spring-MVC's views resolvers -->
	<!--  -->
	
	<!-- Tiles' views -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/portal/definitions/tile-definition.xml</value>
			</list>
		</property>
	</bean>

	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<property name="order" value="0" />
	</bean>	

	<!-- JSP+JSTL's views -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/jsp/portal/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>


</beans>